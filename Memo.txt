# 절대 State를 직접적으로 수정하지 않아. 항상 수정하는 함수를 사용하는 거다.

# '...'전개연산자: 배열이나 객체의 요소를 펼쳐서 개별 요소로 분리하는 역할.

# map은 자바스크립트 함수.
  map은 안에 함수를 넣을 수 있도록 해주는데, 이 함수는 Array의 모든 Item에 대해 실행이 된다.
  그 함수가 실행되서 무엇을 return 하던지간에 return 한 값을 새로운 Array로 생성을 해준다.
  결국 배열안에 Item이 4개가 있다면, 각각의 Item마다 함수를 실행해서 총 4번의 함수가 실행이 된다.
  추가로 map의 두 번째 인자로는 index를 받는다. 아래의 나중에 아래의 코드를 참고.
  {toDos.map((item, index) => <li key={index}>{item}</li>)}

# #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### #### 

# fetch().then()

# response.json() : JSON 형식의 응답 본문을 받아와서 JavsScript 객체로 변환하는 것을 의미한다.

# JavaScript 객체와 JSON 은 비슷해 보이지만 몇 가지 차이점이 있다.
  1. JavaScript 객체는 속성 이름에 따옴표를 사용하지 않는다. 하지만 JSON은 모든 속성 이름은 반드시 큰따옴표로
     둘러싸여 있어야 한다.
  2. JavaScript 객체는 JavaScript의 모든 데이터 타입을 값으로 가질 수 있다. 하지만 JSON은 기본적으로 문자열,
     숫자, 객체, 배열, 불리언, null 만 지원한다.
  3. JavaScript 객체는 메서드(함수)를 포함할 수 있지만, JSON은 메서드를 표현할 수 있는 방법이 없다.
  
  4. JavaScripit 객체는 주석을 사용할 수 있지만, JSON은 주석을 지원하지 않는다.
